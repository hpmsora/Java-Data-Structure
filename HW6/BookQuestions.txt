Won Yong Ha
C343
HW6

Start: Feb 24 2016
End: Feb 26 2016

1.------------------------------------------------------------------

5.32

1) 
Answer: 2, 5
	Since the data will be received and inserting to the data set, it does not necessary
	to sorted so that "a linked-list of unsorted record" and "an array-based list of
	unsorted records" are most efficient data. Farther more, the data was already sorted.

2)
Answer: 2, 5
	Since the large number of insertion and only few number of searching, it does not
	necessay to be sorted data.

3)
Answer: 3
	Since there would be equal amount of searching and inserting, a "Binary Search Tree"
	would be the most efficient data. Since both inserting and seaching takes same
	average time which is log(n).

4)
Answer: 1, 4
	Since there would not much insertion and lots of searching, it is obvious that we
	need sorted data which would be "a linked-list maintained in sorted order" and "an
	array-based list maintained in sorted order."


2.-------------------------------------------------------------------

Huffman Tree


		@
	    0 /   \ 1
	    (A)	   @
	       0 /   \ 1
	       (T)    @
	       	  0 /   \ 1
		  (C)   (G)

Since A is 50%, T is 35%, C is 10 % and G is 5%, we can assume A would be "0", T would be "10"
C would be "110" and G would be "111".

Lets assume we have 1000 elements in random DNA.

Then original way to save the data which 2Bits fixed binary, would be 2000Bits
But if we use this huffmantree,

    A (50%) => 1 Bits => 500 * 1 = 500 Bits
    T (35%) => 2 Btis => 350 * 2 = 700 Bits
    C (10%) => 3 Bits => 100 * 3 = 300 Bits
    G (5%)  => 3 Bits => 50  * 3 = 150 Bits
    ---------------------------------------
			1000	  1650 Bits

So that it compressed by 2000 / 1650 = 1.21212%.

3.-------------------------------------------------------------------

